//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17626
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BikeInCity.Web.HomePortService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKLanguage", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/DataHolders")]
    [System.SerializableAttribute()]
    public partial class TKLanguage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBackendSupportedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBackendSupported {
            get {
                return this.IsBackendSupportedField;
            }
            set {
                if ((this.IsBackendSupportedField.Equals(value) != true)) {
                    this.IsBackendSupportedField = value;
                    this.RaisePropertyChanged("IsBackendSupported");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
    [System.SerializableAttribute()]
    public partial class TKServiceException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKBusinessRule", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/DataHolders")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BikeInCity.Web.HomePortService.TKDayTicketBusinessRule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BikeInCity.Web.HomePortService.TKFullMemberBusinessRule))]
    public partial class TKBusinessRule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        private string ExternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        private int TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsageTermsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ValidFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ValidUntilField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ExternalID {
            get {
                return this.ExternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIDField, value) != true)) {
                    this.ExternalIDField = value;
                    this.RaisePropertyChanged("ExternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UsageTerms {
            get {
                return this.UsageTermsField;
            }
            set {
                if ((object.ReferenceEquals(this.UsageTermsField, value) != true)) {
                    this.UsageTermsField = value;
                    this.RaisePropertyChanged("UsageTerms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ValidFrom {
            get {
                return this.ValidFromField;
            }
            set {
                if ((this.ValidFromField.Equals(value) != true)) {
                    this.ValidFromField = value;
                    this.RaisePropertyChanged("ValidFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ValidUntil {
            get {
                return this.ValidUntilField;
            }
            set {
                if ((this.ValidUntilField.Equals(value) != true)) {
                    this.ValidUntilField = value;
                    this.RaisePropertyChanged("ValidUntil");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKDayTicketBusinessRule", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/DataHolders")]
    [System.SerializableAttribute()]
    public partial class TKDayTicketBusinessRule : BikeInCity.Web.HomePortService.TKBusinessRule {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BikeInCity.Web.HomePortService.TKPriceInterval[] ExtensionRatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MaxSimRentalsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PrepaidDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PrepaidPriceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowExtension {
            get {
                return this.AllowExtensionField;
            }
            set {
                if ((this.AllowExtensionField.Equals(value) != true)) {
                    this.AllowExtensionField = value;
                    this.RaisePropertyChanged("AllowExtension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BikeInCity.Web.HomePortService.TKPriceInterval[] ExtensionRates {
            get {
                return this.ExtensionRatesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionRatesField, value) != true)) {
                    this.ExtensionRatesField = value;
                    this.RaisePropertyChanged("ExtensionRates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MaxSimRentals {
            get {
                return this.MaxSimRentalsField;
            }
            set {
                if ((this.MaxSimRentalsField.Equals(value) != true)) {
                    this.MaxSimRentalsField = value;
                    this.RaisePropertyChanged("MaxSimRentals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PrepaidDuration {
            get {
                return this.PrepaidDurationField;
            }
            set {
                if ((this.PrepaidDurationField.Equals(value) != true)) {
                    this.PrepaidDurationField = value;
                    this.RaisePropertyChanged("PrepaidDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PrepaidPrice {
            get {
                return this.PrepaidPriceField;
            }
            set {
                if ((this.PrepaidPriceField.Equals(value) != true)) {
                    this.PrepaidPriceField = value;
                    this.RaisePropertyChanged("PrepaidPrice");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKFullMemberBusinessRule", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/DataHolders")]
    [System.SerializableAttribute()]
    public partial class TKFullMemberBusinessRule : BikeInCity.Web.HomePortService.TKBusinessRule {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> BonusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MaxSimRentalsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MinCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PeriodFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> PeriodLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PeriodTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BikeInCity.Web.HomePortService.TKPriceInterval[] PriceIntervalsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Bonus {
            get {
                return this.BonusField;
            }
            set {
                if ((this.BonusField.Equals(value) != true)) {
                    this.BonusField = value;
                    this.RaisePropertyChanged("Bonus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MaxSimRentals {
            get {
                return this.MaxSimRentalsField;
            }
            set {
                if ((this.MaxSimRentalsField.Equals(value) != true)) {
                    this.MaxSimRentalsField = value;
                    this.RaisePropertyChanged("MaxSimRentals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MinCredit {
            get {
                return this.MinCreditField;
            }
            set {
                if ((this.MinCreditField.Equals(value) != true)) {
                    this.MinCreditField = value;
                    this.RaisePropertyChanged("MinCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PeriodFee {
            get {
                return this.PeriodFeeField;
            }
            set {
                if ((this.PeriodFeeField.Equals(value) != true)) {
                    this.PeriodFeeField = value;
                    this.RaisePropertyChanged("PeriodFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> PeriodLength {
            get {
                return this.PeriodLengthField;
            }
            set {
                if ((this.PeriodLengthField.Equals(value) != true)) {
                    this.PeriodLengthField = value;
                    this.RaisePropertyChanged("PeriodLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PeriodType {
            get {
                return this.PeriodTypeField;
            }
            set {
                if ((this.PeriodTypeField.Equals(value) != true)) {
                    this.PeriodTypeField = value;
                    this.RaisePropertyChanged("PeriodType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BikeInCity.Web.HomePortService.TKPriceInterval[] PriceIntervals {
            get {
                return this.PriceIntervalsField;
            }
            set {
                if ((object.ReferenceEquals(this.PriceIntervalsField, value) != true)) {
                    this.PriceIntervalsField = value;
                    this.RaisePropertyChanged("PriceIntervals");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKPriceInterval", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/DataHolders")]
    [System.SerializableAttribute()]
    public partial class TKPriceInterval : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LengthField;
        
        private decimal PriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKMapData", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/DataHolders")]
    [System.SerializableAttribute()]
    public partial class TKMapData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DefaultLatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DefaultLongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefaultZoomLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BikeInCity.Web.HomePortService.TKLocationInfo[] LocationsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DefaultLatitude {
            get {
                return this.DefaultLatitudeField;
            }
            set {
                if ((this.DefaultLatitudeField.Equals(value) != true)) {
                    this.DefaultLatitudeField = value;
                    this.RaisePropertyChanged("DefaultLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DefaultLongitude {
            get {
                return this.DefaultLongitudeField;
            }
            set {
                if ((this.DefaultLongitudeField.Equals(value) != true)) {
                    this.DefaultLongitudeField = value;
                    this.RaisePropertyChanged("DefaultLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefaultZoomLevel {
            get {
                return this.DefaultZoomLevelField;
            }
            set {
                if ((this.DefaultZoomLevelField.Equals(value) != true)) {
                    this.DefaultZoomLevelField = value;
                    this.RaisePropertyChanged("DefaultZoomLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BikeInCity.Web.HomePortService.TKLocationInfo[] Locations {
            get {
                return this.LocationsField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationsField, value) != true)) {
                    this.LocationsField = value;
                    this.RaisePropertyChanged("Locations");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKLocationInfo", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/DataHolders")]
    [System.SerializableAttribute()]
    public partial class TKLocationInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BikeInCity.Web.HomePortService.TKLocationBikeInfo[] AvailableBikesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TotalLocksField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BikeInCity.Web.HomePortService.TKLocationBikeInfo[] AvailableBikes {
            get {
                return this.AvailableBikesField;
            }
            set {
                if ((object.ReferenceEquals(this.AvailableBikesField, value) != true)) {
                    this.AvailableBikesField = value;
                    this.RaisePropertyChanged("AvailableBikes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TotalLocks {
            get {
                return this.TotalLocksField;
            }
            set {
                if ((this.TotalLocksField.Equals(value) != true)) {
                    this.TotalLocksField = value;
                    this.RaisePropertyChanged("TotalLocks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKLocationBikeInfo", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/DataHolders")]
    [System.SerializableAttribute()]
    public partial class TKLocationBikeInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKNews", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/DataHolders")]
    [System.SerializableAttribute()]
    public partial class TKNews : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BikeInCity.Web.HomePortService.TKNewsItem[] NewsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageTotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BikeInCity.Web.HomePortService.TKNewsItem[] News {
            get {
                return this.NewsField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsField, value) != true)) {
                    this.NewsField = value;
                    this.RaisePropertyChanged("News");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageNumber {
            get {
                return this.PageNumberField;
            }
            set {
                if ((this.PageNumberField.Equals(value) != true)) {
                    this.PageNumberField = value;
                    this.RaisePropertyChanged("PageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageTotal {
            get {
                return this.PageTotalField;
            }
            set {
                if ((this.PageTotalField.Equals(value) != true)) {
                    this.PageTotalField = value;
                    this.RaisePropertyChanged("PageTotal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKNewsItem", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/DataHolders")]
    [System.SerializableAttribute()]
    public partial class TKNewsItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PublishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Published {
            get {
                return this.PublishedField;
            }
            set {
                if ((this.PublishedField.Equals(value) != true)) {
                    this.PublishedField = value;
                    this.RaisePropertyChanged("Published");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKAuthenticationResult", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/DataHolders")]
    [System.SerializableAttribute()]
    public partial class TKAuthenticationResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] RolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((this.UserTypeField.Equals(value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKCustomer", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/DataHolders")]
    [System.SerializableAttribute()]
    public partial class TKCustomer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BikeInCity.Web.HomePortService.TKAddress[] AddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BikeInCity.Web.HomePortService.TKContact[] ContactsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BikeInCity.Web.HomePortService.TKContract ContractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] TimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleAfterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleBeforeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BikeInCity.Web.HomePortService.TKAddress[] Addresses {
            get {
                return this.AddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressesField, value) != true)) {
                    this.AddressesField = value;
                    this.RaisePropertyChanged("Addresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((this.BirthdayField.Equals(value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BikeInCity.Web.HomePortService.TKContact[] Contacts {
            get {
                return this.ContactsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactsField, value) != true)) {
                    this.ContactsField = value;
                    this.RaisePropertyChanged("Contacts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BikeInCity.Web.HomePortService.TKContract Contract {
            get {
                return this.ContractField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractField, value) != true)) {
                    this.ContractField = value;
                    this.RaisePropertyChanged("Contract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((this.CustomerIDField.Equals(value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((object.ReferenceEquals(this.TimestampField, value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TitleAfter {
            get {
                return this.TitleAfterField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleAfterField, value) != true)) {
                    this.TitleAfterField = value;
                    this.RaisePropertyChanged("TitleAfter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TitleBefore {
            get {
                return this.TitleBeforeField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleBeforeField, value) != true)) {
                    this.TitleBeforeField = value;
                    this.RaisePropertyChanged("TitleBefore");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKContract", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/DataHolders")]
    [System.SerializableAttribute()]
    public partial class TKContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoRenewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessRuleExtIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessRuleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContractIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ValidFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ValidUntilField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoRenew {
            get {
                return this.AutoRenewField;
            }
            set {
                if ((this.AutoRenewField.Equals(value) != true)) {
                    this.AutoRenewField = value;
                    this.RaisePropertyChanged("AutoRenew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessRuleExtID {
            get {
                return this.BusinessRuleExtIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessRuleExtIDField, value) != true)) {
                    this.BusinessRuleExtIDField = value;
                    this.RaisePropertyChanged("BusinessRuleExtID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessRuleName {
            get {
                return this.BusinessRuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessRuleNameField, value) != true)) {
                    this.BusinessRuleNameField = value;
                    this.RaisePropertyChanged("BusinessRuleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContractID {
            get {
                return this.ContractIDField;
            }
            set {
                if ((this.ContractIDField.Equals(value) != true)) {
                    this.ContractIDField = value;
                    this.RaisePropertyChanged("ContractID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ValidFrom {
            get {
                return this.ValidFromField;
            }
            set {
                if ((this.ValidFromField.Equals(value) != true)) {
                    this.ValidFromField = value;
                    this.RaisePropertyChanged("ValidFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ValidUntil {
            get {
                return this.ValidUntilField;
            }
            set {
                if ((this.ValidUntilField.Equals(value) != true)) {
                    this.ValidUntilField = value;
                    this.RaisePropertyChanged("ValidUntil");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKAddress", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/DataHolders")]
    [System.SerializableAttribute()]
    public partial class TKAddress : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AddressIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AddressTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] TimestampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AddressID {
            get {
                return this.AddressIDField;
            }
            set {
                if ((this.AddressIDField.Equals(value) != true)) {
                    this.AddressIDField = value;
                    this.RaisePropertyChanged("AddressID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AddressType {
            get {
                return this.AddressTypeField;
            }
            set {
                if ((this.AddressTypeField.Equals(value) != true)) {
                    this.AddressTypeField = value;
                    this.RaisePropertyChanged("AddressType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((object.ReferenceEquals(this.TimestampField, value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKContact", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/DataHolders")]
    [System.SerializableAttribute()]
    public partial class TKContact : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] TimestampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContactID {
            get {
                return this.ContactIDField;
            }
            set {
                if ((this.ContactIDField.Equals(value) != true)) {
                    this.ContactIDField = value;
                    this.RaisePropertyChanged("ContactID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContactType {
            get {
                return this.ContactTypeField;
            }
            set {
                if ((this.ContactTypeField.Equals(value) != true)) {
                    this.ContactTypeField = value;
                    this.RaisePropertyChanged("ContactType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactValue {
            get {
                return this.ContactValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactValueField, value) != true)) {
                    this.ContactValueField = value;
                    this.RaisePropertyChanged("ContactValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((object.ReferenceEquals(this.TimestampField, value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKNotFoundException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
    [System.SerializableAttribute()]
    public partial class TKNotFoundException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKCard", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/DataHolders")]
    [System.SerializableAttribute()]
    public partial class TKCard : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNumberPrintedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PinField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardNumberPrinted {
            get {
                return this.CardNumberPrintedField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNumberPrintedField, value) != true)) {
                    this.CardNumberPrintedField = value;
                    this.RaisePropertyChanged("CardNumberPrinted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pin {
            get {
                return this.PinField;
            }
            set {
                if ((object.ReferenceEquals(this.PinField, value) != true)) {
                    this.PinField = value;
                    this.RaisePropertyChanged("Pin");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKValidationException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
    [System.SerializableAttribute()]
    public partial class TKValidationException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MissingEntityTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BikeInCity.Web.HomePortService.TKPropertyPath[] MissingFieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BikeInCity.Web.HomePortService.TKPropertyPath[] TooBigFieldsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MissingEntityType {
            get {
                return this.MissingEntityTypeField;
            }
            set {
                if ((this.MissingEntityTypeField.Equals(value) != true)) {
                    this.MissingEntityTypeField = value;
                    this.RaisePropertyChanged("MissingEntityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BikeInCity.Web.HomePortService.TKPropertyPath[] MissingFields {
            get {
                return this.MissingFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.MissingFieldsField, value) != true)) {
                    this.MissingFieldsField = value;
                    this.RaisePropertyChanged("MissingFields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BikeInCity.Web.HomePortService.TKPropertyPath[] TooBigFields {
            get {
                return this.TooBigFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.TooBigFieldsField, value) != true)) {
                    this.TooBigFieldsField = value;
                    this.RaisePropertyChanged("TooBigFields");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKPropertyPath", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
    [System.SerializableAttribute()]
    public partial class TKPropertyPath : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BikeInCity.Web.HomePortService.TKPropertyPath ChildPropertyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PropertyIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BikeInCity.Web.HomePortService.TKPropertyPath ChildProperty {
            get {
                return this.ChildPropertyField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildPropertyField, value) != true)) {
                    this.ChildPropertyField = value;
                    this.RaisePropertyChanged("ChildProperty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PropertyIndex {
            get {
                return this.PropertyIndexField;
            }
            set {
                if ((this.PropertyIndexField.Equals(value) != true)) {
                    this.PropertyIndexField = value;
                    this.RaisePropertyChanged("PropertyIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyName {
            get {
                return this.PropertyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyNameField, value) != true)) {
                    this.PropertyNameField = value;
                    this.RaisePropertyChanged("PropertyName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKConcurrencyException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
    [System.SerializableAttribute()]
    public partial class TKConcurrencyException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKSearchParams", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/DataHolders")]
    [System.SerializableAttribute()]
    public partial class TKSearchParams : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BikeInCity.Web.HomePortService.TKFilterDescriptor[] FilterDescriptorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BikeInCity.Web.HomePortService.TKSortDescriptor[] SortDescriptorsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BikeInCity.Web.HomePortService.TKFilterDescriptor[] FilterDescriptors {
            get {
                return this.FilterDescriptorsField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterDescriptorsField, value) != true)) {
                    this.FilterDescriptorsField = value;
                    this.RaisePropertyChanged("FilterDescriptors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageNumber {
            get {
                return this.PageNumberField;
            }
            set {
                if ((this.PageNumberField.Equals(value) != true)) {
                    this.PageNumberField = value;
                    this.RaisePropertyChanged("PageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BikeInCity.Web.HomePortService.TKSortDescriptor[] SortDescriptors {
            get {
                return this.SortDescriptorsField;
            }
            set {
                if ((object.ReferenceEquals(this.SortDescriptorsField, value) != true)) {
                    this.SortDescriptorsField = value;
                    this.RaisePropertyChanged("SortDescriptors");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKFilterDescriptor", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/DataHolders")]
    [System.SerializableAttribute()]
    public partial class TKFilterDescriptor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FilterTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilterValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttributeName {
            get {
                return this.AttributeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeNameField, value) != true)) {
                    this.AttributeNameField = value;
                    this.RaisePropertyChanged("AttributeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FilterType {
            get {
                return this.FilterTypeField;
            }
            set {
                if ((this.FilterTypeField.Equals(value) != true)) {
                    this.FilterTypeField = value;
                    this.RaisePropertyChanged("FilterType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilterValue {
            get {
                return this.FilterValueField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterValueField, value) != true)) {
                    this.FilterValueField = value;
                    this.RaisePropertyChanged("FilterValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKSortDescriptor", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/DataHolders")]
    [System.SerializableAttribute()]
    public partial class TKSortDescriptor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortDirectionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttributeName {
            get {
                return this.AttributeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeNameField, value) != true)) {
                    this.AttributeNameField = value;
                    this.RaisePropertyChanged("AttributeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortDirection {
            get {
                return this.SortDirectionField;
            }
            set {
                if ((this.SortDirectionField.Equals(value) != true)) {
                    this.SortDirectionField = value;
                    this.RaisePropertyChanged("SortDirection");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKCustomers", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/DataHolders")]
    [System.SerializableAttribute()]
    public partial class TKCustomers : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BikeInCity.Web.HomePortService.TKCustomer[] CustomersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageTotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BikeInCity.Web.HomePortService.TKCustomer[] Customers {
            get {
                return this.CustomersField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomersField, value) != true)) {
                    this.CustomersField = value;
                    this.RaisePropertyChanged("Customers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageNumber {
            get {
                return this.PageNumberField;
            }
            set {
                if ((this.PageNumberField.Equals(value) != true)) {
                    this.PageNumberField = value;
                    this.RaisePropertyChanged("PageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageTotal {
            get {
                return this.PageTotalField;
            }
            set {
                if ((this.PageTotalField.Equals(value) != true)) {
                    this.PageTotalField = value;
                    this.RaisePropertyChanged("PageTotal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKRentals", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/DataHolders")]
    [System.SerializableAttribute()]
    public partial class TKRentals : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BikeInCity.Web.HomePortService.TKRental[] RentalsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan TotalDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageNumber {
            get {
                return this.PageNumberField;
            }
            set {
                if ((this.PageNumberField.Equals(value) != true)) {
                    this.PageNumberField = value;
                    this.RaisePropertyChanged("PageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageTotal {
            get {
                return this.PageTotalField;
            }
            set {
                if ((this.PageTotalField.Equals(value) != true)) {
                    this.PageTotalField = value;
                    this.RaisePropertyChanged("PageTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BikeInCity.Web.HomePortService.TKRental[] Rentals {
            get {
                return this.RentalsField;
            }
            set {
                if ((object.ReferenceEquals(this.RentalsField, value) != true)) {
                    this.RentalsField = value;
                    this.RaisePropertyChanged("Rentals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan TotalDuration {
            get {
                return this.TotalDurationField;
            }
            set {
                if ((this.TotalDurationField.Equals(value) != true)) {
                    this.TotalDurationField = value;
                    this.RaisePropertyChanged("TotalDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKRental", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/DataHolders")]
    [System.SerializableAttribute()]
    public partial class TKRental : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessRuleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RentalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessRuleName {
            get {
                return this.BusinessRuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessRuleNameField, value) != true)) {
                    this.BusinessRuleNameField = value;
                    this.RaisePropertyChanged("BusinessRuleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndLocation {
            get {
                return this.EndLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.EndLocationField, value) != true)) {
                    this.EndLocationField = value;
                    this.RaisePropertyChanged("EndLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RentalID {
            get {
                return this.RentalIDField;
            }
            set {
                if ((this.RentalIDField.Equals(value) != true)) {
                    this.RentalIDField = value;
                    this.RaisePropertyChanged("RentalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartLocation {
            get {
                return this.StartLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.StartLocationField, value) != true)) {
                    this.StartLocationField = value;
                    this.RaisePropertyChanged("StartLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKAccountActivities", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/DataHolders")]
    [System.SerializableAttribute()]
    public partial class TKAccountActivities : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BikeInCity.Web.HomePortService.TKAccountActivity[] ActivitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalCreditField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BikeInCity.Web.HomePortService.TKAccountActivity[] Activities {
            get {
                return this.ActivitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivitiesField, value) != true)) {
                    this.ActivitiesField = value;
                    this.RaisePropertyChanged("Activities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageNumber {
            get {
                return this.PageNumberField;
            }
            set {
                if ((this.PageNumberField.Equals(value) != true)) {
                    this.PageNumberField = value;
                    this.RaisePropertyChanged("PageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageTotal {
            get {
                return this.PageTotalField;
            }
            set {
                if ((this.PageTotalField.Equals(value) != true)) {
                    this.PageTotalField = value;
                    this.RaisePropertyChanged("PageTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalCredit {
            get {
                return this.TotalCreditField;
            }
            set {
                if ((this.TotalCreditField.Equals(value) != true)) {
                    this.TotalCreditField = value;
                    this.RaisePropertyChanged("TotalCredit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKAccountActivity", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/DataHolders")]
    [System.SerializableAttribute()]
    public partial class TKAccountActivity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountActivityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RecordTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountActivityID {
            get {
                return this.AccountActivityIDField;
            }
            set {
                if ((this.AccountActivityIDField.Equals(value) != true)) {
                    this.AccountActivityIDField = value;
                    this.RaisePropertyChanged("AccountActivityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityType {
            get {
                return this.ActivityTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityTypeField, value) != true)) {
                    this.ActivityTypeField = value;
                    this.RaisePropertyChanged("ActivityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalID {
            get {
                return this.ExternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIDField, value) != true)) {
                    this.ExternalIDField = value;
                    this.RaisePropertyChanged("ExternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RecordTime {
            get {
                return this.RecordTimeField;
            }
            set {
                if ((this.RecordTimeField.Equals(value) != true)) {
                    this.RecordTimeField = value;
                    this.RaisePropertyChanged("RecordTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKContracts", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/DataHolders")]
    [System.SerializableAttribute()]
    public partial class TKContracts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BikeInCity.Web.HomePortService.TKContract[] ContractsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageTotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BikeInCity.Web.HomePortService.TKContract[] Contracts {
            get {
                return this.ContractsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractsField, value) != true)) {
                    this.ContractsField = value;
                    this.RaisePropertyChanged("Contracts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageNumber {
            get {
                return this.PageNumberField;
            }
            set {
                if ((this.PageNumberField.Equals(value) != true)) {
                    this.PageNumberField = value;
                    this.RaisePropertyChanged("PageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageTotal {
            get {
                return this.PageTotalField;
            }
            set {
                if ((this.PageTotalField.Equals(value) != true)) {
                    this.PageTotalField = value;
                    this.RaisePropertyChanged("PageTotal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TKCountry", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/DataHolders")]
    [System.SerializableAttribute()]
    public partial class TKCountry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2", ConfigurationName="HomePortService.IExternalAPI_122")]
    public interface IExternalAPI_122 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetLanguages", ReplyAction="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetLanguagesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKServiceException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetLanguagesTKService" +
            "ExceptionFault", Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        BikeInCity.Web.HomePortService.TKLanguage[] GetLanguages(string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetBusinessRules", ReplyAction="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetBusinessRulesRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKServiceException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetBusinessRulesTKSer" +
            "viceExceptionFault", Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        BikeInCity.Web.HomePortService.TKBusinessRule[] GetBusinessRules(string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetMapData", ReplyAction="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetMapDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKServiceException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetMapDataTKServiceEx" +
            "ceptionFault", Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        BikeInCity.Web.HomePortService.TKMapData GetMapData(string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetNews", ReplyAction="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetNewsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKServiceException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetNewsTKServiceExcep" +
            "tionFault", Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        BikeInCity.Web.HomePortService.TKNews GetNews(int pageNumber, string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AuthenticateUser", ReplyAction="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AuthenticateUserRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKServiceException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AuthenticateUserTKSer" +
            "viceExceptionFault", Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        BikeInCity.Web.HomePortService.TKAuthenticationResult AuthenticateUser(string cardPrintedNumber, string cardRfId, string pin, string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomer", ReplyAction="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKNotFoundException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomerTKNotFound" +
            "ExceptionFault", Name="TKNotFoundException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKServiceException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomerTKServiceE" +
            "xceptionFault", Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        BikeInCity.Web.HomePortService.TKCustomer GetCustomer(int customerId, bool includeAddresses, bool includeContacts, string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomerAddresses", ReplyAction="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomerAddressesR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKServiceException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomerAddressesT" +
            "KServiceExceptionFault", Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKNotFoundException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomerAddressesT" +
            "KNotFoundExceptionFault", Name="TKNotFoundException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        BikeInCity.Web.HomePortService.TKAddress[] GetCustomerAddresses(int customerId, string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomerContacts", ReplyAction="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomerContactsRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKNotFoundException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomerContactsTK" +
            "NotFoundExceptionFault", Name="TKNotFoundException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKServiceException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomerContactsTK" +
            "ServiceExceptionFault", Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        BikeInCity.Web.HomePortService.TKContact[] GetCustomerContacts(int customerId, string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomerCards", ReplyAction="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomerCardsRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKNotFoundException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomerCardsTKNot" +
            "FoundExceptionFault", Name="TKNotFoundException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKServiceException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomerCardsTKSer" +
            "viceExceptionFault", Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        BikeInCity.Web.HomePortService.TKCard[] GetCustomerCards(int customerId, string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AssignCard", ReplyAction="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AssignCardResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKNotFoundException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AssignCardTKNotFoundE" +
            "xceptionFault", Name="TKNotFoundException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKValidationException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AssignCardTKValidatio" +
            "nExceptionFault", Name="TKValidationException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKServiceException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AssignCardTKServiceEx" +
            "ceptionFault", Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        void AssignCard(string cardPrintedNumber, string cardRfId, string pin, int customerId, string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/UnassignCard", ReplyAction="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/UnassignCardResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKNotFoundException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/UnassignCardTKNotFoun" +
            "dExceptionFault", Name="TKNotFoundException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKValidationException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/UnassignCardTKValidat" +
            "ionExceptionFault", Name="TKValidationException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKServiceException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/UnassignCardTKService" +
            "ExceptionFault", Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        void UnassignCard(string cardPrintedNumber, string cardRfId, string pin, int customerId, string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/CreateCustomer", ReplyAction="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/CreateCustomerRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKNotFoundException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/CreateCustomerTKNotFo" +
            "undExceptionFault", Name="TKNotFoundException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKValidationException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/CreateCustomerTKValid" +
            "ationExceptionFault", Name="TKValidationException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKServiceException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/CreateCustomerTKServi" +
            "ceExceptionFault", Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        BikeInCity.Web.HomePortService.TKCustomer CreateCustomer(BikeInCity.Web.HomePortService.TKCustomer customer, string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AddCustomer", ReplyAction="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AddCustomerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKServiceException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AddCustomerTKServiceE" +
            "xceptionFault", Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKNotFoundException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AddCustomerTKNotFound" +
            "ExceptionFault", Name="TKNotFoundException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKValidationException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AddCustomerTKValidati" +
            "onExceptionFault", Name="TKValidationException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        BikeInCity.Web.HomePortService.TKCustomer AddCustomer(BikeInCity.Web.HomePortService.TKCustomer customer, string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/UpdateCustomer", ReplyAction="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/UpdateCustomerRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKConcurrencyException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/UpdateCustomerTKConcu" +
            "rrencyExceptionFault", Name="TKConcurrencyException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKServiceException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/UpdateCustomerTKServi" +
            "ceExceptionFault", Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKNotFoundException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/UpdateCustomerTKNotFo" +
            "undExceptionFault", Name="TKNotFoundException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKValidationException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/UpdateCustomerTKValid" +
            "ationExceptionFault", Name="TKValidationException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        BikeInCity.Web.HomePortService.TKCustomer UpdateCustomer(BikeInCity.Web.HomePortService.TKCustomer customer, string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AddContract", ReplyAction="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AddContractResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKValidationException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AddContractTKValidati" +
            "onExceptionFault", Name="TKValidationException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKServiceException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AddContractTKServiceE" +
            "xceptionFault", Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKNotFoundException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AddContractTKNotFound" +
            "ExceptionFault", Name="TKNotFoundException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        BikeInCity.Web.HomePortService.TKContract AddContract(int customerId, BikeInCity.Web.HomePortService.TKContract contract, string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AddAddress", ReplyAction="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AddAddressResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKValidationException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AddAddressTKValidatio" +
            "nExceptionFault", Name="TKValidationException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKServiceException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AddAddressTKServiceEx" +
            "ceptionFault", Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKNotFoundException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AddAddressTKNotFoundE" +
            "xceptionFault", Name="TKNotFoundException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        BikeInCity.Web.HomePortService.TKAddress AddAddress(int customerId, BikeInCity.Web.HomePortService.TKAddress address, string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/UpdateAddress", ReplyAction="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/UpdateAddressResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKConcurrencyException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/UpdateAddressTKConcur" +
            "rencyExceptionFault", Name="TKConcurrencyException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKValidationException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/UpdateAddressTKValida" +
            "tionExceptionFault", Name="TKValidationException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKServiceException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/UpdateAddressTKServic" +
            "eExceptionFault", Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKNotFoundException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/UpdateAddressTKNotFou" +
            "ndExceptionFault", Name="TKNotFoundException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        BikeInCity.Web.HomePortService.TKAddress UpdateAddress(BikeInCity.Web.HomePortService.TKAddress address, string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/DeleteAddress", ReplyAction="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/DeleteAddressResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKValidationException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/DeleteAddressTKValida" +
            "tionExceptionFault", Name="TKValidationException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKConcurrencyException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/DeleteAddressTKConcur" +
            "rencyExceptionFault", Name="TKConcurrencyException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKServiceException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/DeleteAddressTKServic" +
            "eExceptionFault", Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKNotFoundException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/DeleteAddressTKNotFou" +
            "ndExceptionFault", Name="TKNotFoundException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        void DeleteAddress(int addressId, byte[] timestamp, string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AddContact", ReplyAction="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AddContactResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKValidationException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AddContactTKValidatio" +
            "nExceptionFault", Name="TKValidationException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKServiceException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AddContactTKServiceEx" +
            "ceptionFault", Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKNotFoundException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AddContactTKNotFoundE" +
            "xceptionFault", Name="TKNotFoundException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        BikeInCity.Web.HomePortService.TKContact AddContact(int customerId, BikeInCity.Web.HomePortService.TKContact contact, string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/UpdateContact", ReplyAction="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/UpdateContactResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKNotFoundException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/UpdateContactTKNotFou" +
            "ndExceptionFault", Name="TKNotFoundException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKValidationException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/UpdateContactTKValida" +
            "tionExceptionFault", Name="TKValidationException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKServiceException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/UpdateContactTKServic" +
            "eExceptionFault", Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKConcurrencyException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/UpdateContactTKConcur" +
            "rencyExceptionFault", Name="TKConcurrencyException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        BikeInCity.Web.HomePortService.TKContact UpdateContact(BikeInCity.Web.HomePortService.TKContact contact, string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/DeleteContact", ReplyAction="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/DeleteContactResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKNotFoundException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/DeleteContactTKNotFou" +
            "ndExceptionFault", Name="TKNotFoundException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKConcurrencyException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/DeleteContactTKConcur" +
            "rencyExceptionFault", Name="TKConcurrencyException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKValidationException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/DeleteContactTKValida" +
            "tionExceptionFault", Name="TKValidationException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKServiceException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/DeleteContactTKServic" +
            "eExceptionFault", Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        void DeleteContact(int contactId, byte[] timestamp, string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AddCredit", ReplyAction="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AddCreditResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKValidationException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AddCreditTKValidation" +
            "ExceptionFault", Name="TKValidationException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKServiceException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AddCreditTKServiceExc" +
            "eptionFault", Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKNotFoundException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/AddCreditTKNotFoundEx" +
            "ceptionFault", Name="TKNotFoundException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        void AddCredit(int customerId, string activityType, decimal amount, string currency, string note, string externalId, string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/UpdatePin", ReplyAction="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/UpdatePinResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKServiceException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/UpdatePinTKServiceExc" +
            "eptionFault", Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKValidationException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/UpdatePinTKValidation" +
            "ExceptionFault", Name="TKValidationException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKNotFoundException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/UpdatePinTKNotFoundEx" +
            "ceptionFault", Name="TKNotFoundException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        void UpdatePin(string cardPrintedNumber, string cardFrId, string oldPin, string newPin, string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GenerateCard", ReplyAction="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GenerateCardResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKServiceException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GenerateCardTKService" +
            "ExceptionFault", Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKValidationException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GenerateCardTKValidat" +
            "ionExceptionFault", Name="TKValidationException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKNotFoundException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GenerateCardTKNotFoun" +
            "dExceptionFault", Name="TKNotFoundException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        BikeInCity.Web.HomePortService.TKCard GenerateCard(string pin, System.Nullable<byte> pinLength, System.Nullable<System.DateTime> validFrom, System.Nullable<System.DateTime> validUntil, string cardType, int cardState, string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomers", ReplyAction="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKServiceException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomersTKService" +
            "ExceptionFault", Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        BikeInCity.Web.HomePortService.TKCustomers GetCustomers(BikeInCity.Web.HomePortService.TKSearchParams searchParams, bool includeAddresses, bool includeContacts, string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomerRentals", ReplyAction="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomerRentalsRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKServiceException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomerRentalsTKS" +
            "erviceExceptionFault", Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKNotFoundException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomerRentalsTKN" +
            "otFoundExceptionFault", Name="TKNotFoundException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        BikeInCity.Web.HomePortService.TKRentals GetCustomerRentals(int customerId, BikeInCity.Web.HomePortService.TKSearchParams searchParams, string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomerAccountAct" +
            "ivities", ReplyAction="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomerAccountAct" +
            "ivitiesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKServiceException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomerAccountAct" +
            "ivitiesTKServiceExceptionFault", Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKNotFoundException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomerAccountAct" +
            "ivitiesTKNotFoundExceptionFault", Name="TKNotFoundException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        BikeInCity.Web.HomePortService.TKAccountActivities GetCustomerAccountActivities(int customerId, BikeInCity.Web.HomePortService.TKSearchParams searchParams, string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomerContracts", ReplyAction="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomerContractsR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKServiceException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomerContractsT" +
            "KServiceExceptionFault", Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKNotFoundException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCustomerContractsT" +
            "KNotFoundExceptionFault", Name="TKNotFoundException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        BikeInCity.Web.HomePortService.TKContracts GetCustomerContracts(int customerId, BikeInCity.Web.HomePortService.TKSearchParams searchParams, string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCountries", ReplyAction="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCountriesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BikeInCity.Web.HomePortService.TKServiceException), Action="http://tkhs.kite.cz/ExternalServices_1_2_2/IExternalAPI_122/GetCountriesTKService" +
            "ExceptionFault", Name="TKServiceException", Namespace="http://tkhs.kite.cz/ExternalServices_1_2_2/Exceptions")]
        BikeInCity.Web.HomePortService.TKCountry[] GetCountries(string lang);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IExternalAPI_122Channel : BikeInCity.Web.HomePortService.IExternalAPI_122, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExternalAPI_122Client : System.ServiceModel.ClientBase<BikeInCity.Web.HomePortService.IExternalAPI_122>, BikeInCity.Web.HomePortService.IExternalAPI_122 {
        
        public ExternalAPI_122Client() {
        }
        
        public ExternalAPI_122Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExternalAPI_122Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExternalAPI_122Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExternalAPI_122Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BikeInCity.Web.HomePortService.TKLanguage[] GetLanguages(string lang) {
            return base.Channel.GetLanguages(lang);
        }
        
        public BikeInCity.Web.HomePortService.TKBusinessRule[] GetBusinessRules(string lang) {
            return base.Channel.GetBusinessRules(lang);
        }
        
        public BikeInCity.Web.HomePortService.TKMapData GetMapData(string lang) {
            return base.Channel.GetMapData(lang);
        }
        
        public BikeInCity.Web.HomePortService.TKNews GetNews(int pageNumber, string lang) {
            return base.Channel.GetNews(pageNumber, lang);
        }
        
        public BikeInCity.Web.HomePortService.TKAuthenticationResult AuthenticateUser(string cardPrintedNumber, string cardRfId, string pin, string lang) {
            return base.Channel.AuthenticateUser(cardPrintedNumber, cardRfId, pin, lang);
        }
        
        public BikeInCity.Web.HomePortService.TKCustomer GetCustomer(int customerId, bool includeAddresses, bool includeContacts, string lang) {
            return base.Channel.GetCustomer(customerId, includeAddresses, includeContacts, lang);
        }
        
        public BikeInCity.Web.HomePortService.TKAddress[] GetCustomerAddresses(int customerId, string lang) {
            return base.Channel.GetCustomerAddresses(customerId, lang);
        }
        
        public BikeInCity.Web.HomePortService.TKContact[] GetCustomerContacts(int customerId, string lang) {
            return base.Channel.GetCustomerContacts(customerId, lang);
        }
        
        public BikeInCity.Web.HomePortService.TKCard[] GetCustomerCards(int customerId, string lang) {
            return base.Channel.GetCustomerCards(customerId, lang);
        }
        
        public void AssignCard(string cardPrintedNumber, string cardRfId, string pin, int customerId, string lang) {
            base.Channel.AssignCard(cardPrintedNumber, cardRfId, pin, customerId, lang);
        }
        
        public void UnassignCard(string cardPrintedNumber, string cardRfId, string pin, int customerId, string lang) {
            base.Channel.UnassignCard(cardPrintedNumber, cardRfId, pin, customerId, lang);
        }
        
        public BikeInCity.Web.HomePortService.TKCustomer CreateCustomer(BikeInCity.Web.HomePortService.TKCustomer customer, string lang) {
            return base.Channel.CreateCustomer(customer, lang);
        }
        
        public BikeInCity.Web.HomePortService.TKCustomer AddCustomer(BikeInCity.Web.HomePortService.TKCustomer customer, string lang) {
            return base.Channel.AddCustomer(customer, lang);
        }
        
        public BikeInCity.Web.HomePortService.TKCustomer UpdateCustomer(BikeInCity.Web.HomePortService.TKCustomer customer, string lang) {
            return base.Channel.UpdateCustomer(customer, lang);
        }
        
        public BikeInCity.Web.HomePortService.TKContract AddContract(int customerId, BikeInCity.Web.HomePortService.TKContract contract, string lang) {
            return base.Channel.AddContract(customerId, contract, lang);
        }
        
        public BikeInCity.Web.HomePortService.TKAddress AddAddress(int customerId, BikeInCity.Web.HomePortService.TKAddress address, string lang) {
            return base.Channel.AddAddress(customerId, address, lang);
        }
        
        public BikeInCity.Web.HomePortService.TKAddress UpdateAddress(BikeInCity.Web.HomePortService.TKAddress address, string lang) {
            return base.Channel.UpdateAddress(address, lang);
        }
        
        public void DeleteAddress(int addressId, byte[] timestamp, string lang) {
            base.Channel.DeleteAddress(addressId, timestamp, lang);
        }
        
        public BikeInCity.Web.HomePortService.TKContact AddContact(int customerId, BikeInCity.Web.HomePortService.TKContact contact, string lang) {
            return base.Channel.AddContact(customerId, contact, lang);
        }
        
        public BikeInCity.Web.HomePortService.TKContact UpdateContact(BikeInCity.Web.HomePortService.TKContact contact, string lang) {
            return base.Channel.UpdateContact(contact, lang);
        }
        
        public void DeleteContact(int contactId, byte[] timestamp, string lang) {
            base.Channel.DeleteContact(contactId, timestamp, lang);
        }
        
        public void AddCredit(int customerId, string activityType, decimal amount, string currency, string note, string externalId, string lang) {
            base.Channel.AddCredit(customerId, activityType, amount, currency, note, externalId, lang);
        }
        
        public void UpdatePin(string cardPrintedNumber, string cardFrId, string oldPin, string newPin, string lang) {
            base.Channel.UpdatePin(cardPrintedNumber, cardFrId, oldPin, newPin, lang);
        }
        
        public BikeInCity.Web.HomePortService.TKCard GenerateCard(string pin, System.Nullable<byte> pinLength, System.Nullable<System.DateTime> validFrom, System.Nullable<System.DateTime> validUntil, string cardType, int cardState, string lang) {
            return base.Channel.GenerateCard(pin, pinLength, validFrom, validUntil, cardType, cardState, lang);
        }
        
        public BikeInCity.Web.HomePortService.TKCustomers GetCustomers(BikeInCity.Web.HomePortService.TKSearchParams searchParams, bool includeAddresses, bool includeContacts, string lang) {
            return base.Channel.GetCustomers(searchParams, includeAddresses, includeContacts, lang);
        }
        
        public BikeInCity.Web.HomePortService.TKRentals GetCustomerRentals(int customerId, BikeInCity.Web.HomePortService.TKSearchParams searchParams, string lang) {
            return base.Channel.GetCustomerRentals(customerId, searchParams, lang);
        }
        
        public BikeInCity.Web.HomePortService.TKAccountActivities GetCustomerAccountActivities(int customerId, BikeInCity.Web.HomePortService.TKSearchParams searchParams, string lang) {
            return base.Channel.GetCustomerAccountActivities(customerId, searchParams, lang);
        }
        
        public BikeInCity.Web.HomePortService.TKContracts GetCustomerContracts(int customerId, BikeInCity.Web.HomePortService.TKSearchParams searchParams, string lang) {
            return base.Channel.GetCustomerContracts(customerId, searchParams, lang);
        }
        
        public BikeInCity.Web.HomePortService.TKCountry[] GetCountries(string lang) {
            return base.Channel.GetCountries(lang);
        }
    }
}
